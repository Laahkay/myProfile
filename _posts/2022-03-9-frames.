css
.App{
  text-align: center;
  color: rgb(0, 195, 255);
  background-color: rgb(32, 31, 31);
  width: 26%;
 margin: auto;
 border-radius: 5%;
 box-shadow: 10px 10px 5px rgb(112, 200, 230);
}
ul {
  list-style-type: none;
  margin: 0;
  padding: 6%;
}
.button:hover {
  background-color: rgb(0, 195, 255);
  color: aliceblue;
}
.button {
  position: relative;
top: 9px;
font-family: var(--primary-font);
	font-size: 16px;
	font-weight: 600;

	padding: 10px 30px;
	color: #fff;
	cursor:pointer;
	background-color: var(--blue);
	border-color: var(--blue);
	border-radius: 4px;
	box-shadow: 0 2px 0 rgba(0,0,0,.045);
	transition: all .3s ease;
	border: 1px solid transparent;
  border: none;
  border-bottom: 2px solid rgb(32, 168, 223);
	
}
.table {
margin: auto;
position: relative;
color: black;
background-color: rgb(37, 144, 206);
width: 100%;
 margin: auto;
 margin-left: 0%;
}
h2 {
  font-size: 2.5rem;
  padding-top: 1em;
  text-shadow: 2px 2px rgb(255, 255, 255); 
}
h4 {
  position: relative;
right: 90px;
padding-top: 0.3em;
text-shadow: 2px 2px rgb(48, 167, 236);
}
li {
  display: inline-table;
  position: relative;
right: 19px;
top: 39%;
margin-left: 40px;
}
h3 {
  text-shadow: 2px 2px rgb(252, 253, 253);
}
body {
  background-color: rgb(33, 168, 185);
}
input[type=text] {
  border: none;
  border-bottom: 2px solid rgb(32, 168, 223);
  width: 50%;
  padding: 2%;
  border: 3px solid rgb(46, 44, 44);
}
input[type=email] {
  border: none;
  border-bottom: 2px solid rgb(32, 168, 223);
  width: 50%;
  padding: 2%;
  border: 3px solid rgb(46, 44, 44);
}
input[type=file] {
  border: none;
  border-bottom: 2px solid rgb(32, 168, 223);
  width: 50%;
  padding: 2%;
  border: 3px solid rgb(46, 44, 44);
}
.btn1 {
 background-color: rgb(255, 38, 0);
}
.btn2 {
  background-color: rgb(9, 255, 0);
 }

App.js

import React,{useState} from 'react';
import './App.css';
import logo from './assets/favicon.ico'


function App() {

const [form,setForm ] = useState(
{firstname:'',
surname:'',email:''}
)
const [list,setList]= useState(
  []
)
const handleChange = (e) => {
  setForm({...form,[e.target.name]: e.target.value})
  
}

const handleSubmit = (e) =>{
e.preventDefault();
if(!form.firstname || !form.surname && !form.email){
  return 'Fill in the missing user name'
}else{

  setList([...list,form])
}
setForm ({firstname:"",surname:"",email:""})

}

  return (

    <div className="App">
      <form onSubmit={handleSubmit}>
        <h2>My React Form</h2>
<img src={logo} className='logo' alt='' />
        <h3>Name</h3>
   <input type="text" name="firstname" value={form.firstname} placeholder='first name' onChange={handleChange}/><br></br>
  <h3>Surname</h3>
   <input type="text" name="surname" value={form.surname} placeholder='last name' onChange={handleChange}/>
   <br></br>
   <h3>Enter Your Email</h3>
   <input type="email" name="email" value={form.email} placeholder='email' onChange={handleChange}/>
<br></br>
   <button className='button' type="submit">Submit</button>
   </form>

<h3>Active </h3>
		
        <table className='table'>
          <thead >
            <tr>
              {/* <th scope="col">Name</th> */}
              <th scope="col" >Your</th>
              {/* <th scope="col">Email</th> */}

            </tr>
          </thead></table>

   {list.map((item,index)=> {
     return( 
       <ul key={index}>            
         <li>{item.firstname}</li>
         <li>{item.surname}</li>
         <li>{item.email}</li>
       </ul>
     )
   })}
     </div>
  );
}

quote machine

import React ,{useState, useEffect ,useRef} from'react'
import Form from "./components/form"
import Display from './components/display'

import './App.css';








function App() {
  const [quote, setQuote] = useState('');
  const textRef = useRef();
let colors = ['#ffff00','#90ee90','#ffa500','#ff68ff','#a9a9e']


const getQuote = () => {
  fetch("https://type.fit/api/quotes")
  .then((res) => res.json())
  .then((data) => {
    let randomNum = Math.floor(Math.random() * data.length);
  setQuote(data[randomNum]);
  });
};
useEffect(() => {
  getQuote();
}, []);
useEffect(() => {
textRef.current.style.color =
 colors[Math.floor(Math.random() * colors.length)]
}, [quote])


  return (
    <div className="App">
      <div className='quote'>
       <p ref={textRef}>{quote.text}</p>
       <p>Author: {quote.author}</p>
      <div className='btnContainer'>
        <button onClick={getQuote} className='btn1'>Get Quote</button>
        <a href={`http://twitter.com/intend/tweet?text=${quote.text}`}
        target='_blank'
        rel='no opener no referrer' 
        className='btn2'>Tweet</a>
        <i class="fa fa-twitter" aria-hidden="true"></i>
        <a class="list-group-item" href="#"><i class="fa fa-twitter" aria-hidden="true"></i>&nbsp; My Quote Practice</a>
        </div> 
      </div>
    </div>
  );
}

export default App;

CSS of Quote machine

* {
  box-sizing: border-box;
  margin: 0%;
  padding: 0%;
}
body {
  width: 100%;
  margin: auto;
  height:100%;
  background-color: rgb(247, 136, 0);

}
.App {
  min-height: 100vh;
  display: flex;
  background: rgb(53, 51, 51);
}
.quote {
  margin: auto;
  width: 100%;
  max-width: 400px;
  min-height: 195px;
  background: rgba(255, 255, 255, 0.13);
  border-radius: 9px;
  box-shadow: blue;
  display: flex;
  flex-direction: column;
height: 100%;
  
}
p {
  color: rgb(0, 0, 0);
  font-size: 18px;
  word-wrap: 10px 0;
  text-align: center;
  color: #186ccf;
  /* font-size: 1.1rem; */
  font-family: var(--primary-font);
	font-size: 16px;
	font-weight: 600;
}
p:last-of-type {
  margin: 10px 0;
}

a {
  text-decoration: none;
  display: inline-block;
  text-align: center;
}
.btn1 {
/* background-color: ;
position:relative;
 left:100px; 
 top:10px;
 border: none;
background: none;
text-align: center;
color: #186ccf;
border-radius: 5px;
font-size: 1.2rem; */
position: relative;
top: 9px;
font-family: var(--primary-font);
	font-size: 16px;
	font-weight: 600;

	padding: 10px 30px;
	color: #fff;
	cursor:pointer;
	background-color: var(--blue);
	border-color: var(--blue);
	border-radius: 4px;
	box-shadow: 0 2px 0 rgba(0,0,0,.045);
	transition: all .3s ease;
	border: 1px solid transparent;
  border: none;
  border-bottom: 2px solid rgb(32, 168, 223);
}
.btn2 {
  /* background: rgba(222, 218, 226, 0.199); */
  position:relative;
   left:150px; 
   top:10px;
   font-family: var(--primary-font);
   font-size: 16px;
   font-weight: 600;
 
   padding: 10px 30px;
   color: #fff;
   cursor:pointer;
   background-color: var(--blue);
   border-color: var(--blue);
   border-radius: 4px;
   box-shadow: 0 2px 0 rgba(0,0,0,.045);
   transition: all .3s ease;
   border: 1px solid transparent;
   border: none;
   border-bottom: 2px solid rgb(32, 168, 223)
  }
.btn1:hover {
  background: rgba(255, 255, 255, 0.13);
  color: rgb(255, 255, 255);
}
.btn2:hover {
  background: rgba(255, 255, 255, 0.13);
  color: rgb(255, 255, 255);
}
